<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order.mapper.FoodMapper">
  <resultMap id="BaseResultMap" type="order.pojo.Food">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="availability" jdbcType="BOOLEAN" property="availability" />
    <result column="ingredients" jdbcType="VARCHAR" property="ingredients" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="calorie" jdbcType="DOUBLE" property="calorie" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="restaurant" jdbcType="INTEGER" property="restaurant" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, price, availability, ingredients, picture, calorie, `type`, restaurant
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from food
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from food
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="order.pojo.Food" useGeneratedKeys="true">
    insert into food (`name`, price, availability, 
      ingredients, picture, calorie, 
      `type`, restaurant)
    values (#{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{availability,jdbcType=BOOLEAN}, 
      #{ingredients,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, #{calorie,jdbcType=DOUBLE}, 
      #{type,jdbcType=VARCHAR}, #{restaurant,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="order.pojo.Food" useGeneratedKeys="true">
    insert into food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="availability != null">
        availability,
      </if>
      <if test="ingredients != null">
        ingredients,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="calorie != null">
        calorie,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="restaurant != null">
        restaurant,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="availability != null">
        #{availability,jdbcType=BOOLEAN},
      </if>
      <if test="ingredients != null">
        #{ingredients,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="calorie != null">
        #{calorie,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="restaurant != null">
        #{restaurant,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="order.pojo.Food">
    update food
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="availability != null">
        availability = #{availability,jdbcType=BOOLEAN},
      </if>
      <if test="ingredients != null">
        ingredients = #{ingredients,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="calorie != null">
        calorie = #{calorie,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="restaurant != null">
        restaurant = #{restaurant,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="order.pojo.Food">
    update food
    set `name` = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      availability = #{availability,jdbcType=BOOLEAN},
      ingredients = #{ingredients,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      calorie = #{calorie,jdbcType=DOUBLE},
      `type` = #{type,jdbcType=VARCHAR},
      restaurant = #{restaurant,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectList" parameterType="order.pojo.Food" resultType="order.pojo.Food">
    select <include refid="Base_Column_List" />
    from food
    <where>
      <if test="name != null">
      and  `name` like concat('%', concat(#{name,jdbcType=VARCHAR}, '%'))
      </if>
      <if test="price != null">
        and price &lt;= #{price,jdbcType=DOUBLE}
      </if>
      <if test="availability != null">
      and  availability = #{availability,jdbcType=BOOLEAN}
      </if>
      <if test="ingredients != null">
       and ingredients = #{ingredients,jdbcType=VARCHAR}
      </if>
      <if test="picture != null">
       and picture like concat('%', concat(#{picture,jdbcType=VARCHAR}, '%'))
      </if>
      <if test="calorie != null">
       and calorie &lt;= #{calorie,jdbcType=DOUBLE}
      </if>
      <if test="type != null">
       and `type` like concat('%', concat(#{type,jdbcType=VARCHAR}, '%'))
      </if>
      <if test="restaurant != null">
       and restaurant = #{restaurant,jdbcType=INTEGER}
      </if>
    </where>
  </select>
</mapper>