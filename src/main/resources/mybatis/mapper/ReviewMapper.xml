<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="order.mapper.ReviewMapper">
    <resultMap id="BaseResultMap" type="order.pojo.Review">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="rating" jdbcType="INTEGER" property="rating"/>
        <result column="comments" jdbcType="VARCHAR" property="comments"/>
        <result column="restaurant" jdbcType="INTEGER" property="restaurant"/>
        <result column="time" jdbcType="TIMESTAMP" property="time"/>
        <result column="user" jdbcType="INTEGER" property="user"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , rating, comments, restaurant, `time`, `user`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from review
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultType="order.pojo.Review">
        select
        <include refid="Base_Column_List"/>
        from review
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from review
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="order.pojo.Review" useGeneratedKeys="true">
        insert into review (rating, comments, restaurant,
                            `time`, `user`)
        values (#{rating,jdbcType=INTEGER}, #{comments,jdbcType=VARCHAR}, #{restaurant,jdbcType=INTEGER},
                #{time,jdbcType=TIMESTAMP}, #{user,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="order.pojo.Review" useGeneratedKeys="true">
        insert into review
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rating != null">
                rating,
            </if>
            <if test="comments != null">
                comments,
            </if>
            <if test="restaurant != null">
                restaurant,
            </if>
            <if test="time != null">
                `time`,
            </if>
            <if test="user != null">
                `user`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rating != null">
                #{rating,jdbcType=INTEGER},
            </if>
            <if test="comments != null">
                #{comments,jdbcType=VARCHAR},
            </if>
            <if test="restaurant != null">
                #{restaurant,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="user != null">
                #{user,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="order.pojo.Review">
        update review
        <set>
            <if test="rating != null">
                rating = #{rating,jdbcType=INTEGER},
            </if>
            <if test="comments != null">
                comments = #{comments,jdbcType=VARCHAR},
            </if>
            <if test="restaurant != null">
                restaurant = #{restaurant,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                `time` = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="user != null">
                `user` = #{user,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="order.pojo.Review">
        update review
        set rating     = #{rating,jdbcType=INTEGER},
            comments   = #{comments,jdbcType=VARCHAR},
            restaurant = #{restaurant,jdbcType=INTEGER},
            `time`     = #{time,jdbcType=TIMESTAMP},
            `user`     = #{user,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectList" parameterType="order.pojo.Review" resultType="order.pojo.Review">
        select
        <include refid="Base_Column_List"/>
        from review
        <where>
            <if test="rating != null">
                and rating >= #{rating,jdbcType=INTEGER}
            </if>
            <if test="comments != null">
                and comments like concat('%', concat(#{comments,jdbcType=VARCHAR}, '%'))
            </if>
            <if test="restaurant != null">
                and restaurant = #{restaurant,jdbcType=INTEGER}
            </if>
            <if test="time != null">
                and DATE(`time`) = DATE(#{time,jdbcType=TIMESTAMP})
            </if>
            <if test="user != null">
                and `user` = #{user,jdbcType=INTEGER}
            </if>
        </where>
        order by `time` desc
    </select>

    <select id="selectListVo" parameterType="order.pojo.Review" resultType="order.vo.ReviewVo">
        select
        r.id id, rating, comments, restaurant, `time`, `user`,
        u.user_name user_name, u.email user_email, u.icon user_icon
        from review r join `user` u on r.`user` = u.id
        <where>
            <if test="rating != null">
                and rating >= #{rating,jdbcType=INTEGER}
            </if>
            <if test="comments != null">
                and comments like concat('%', concat(#{comments,jdbcType=VARCHAR}, '%'))
            </if>
            <if test="restaurant != null">
                and restaurant = #{restaurant,jdbcType=INTEGER}
            </if>
            <if test="time != null">
                and DATE(`time`) = DATE(#{time,jdbcType=TIMESTAMP})
            </if>
            <if test="user != null">
                and `user` = #{user,jdbcType=INTEGER}
            </if>
        </where>
        order by r.`time` desc
    </select>
</mapper>